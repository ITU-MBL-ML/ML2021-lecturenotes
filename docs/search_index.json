[["index.html", "MBL549 Machine Learning in Architecture Chapter 1 Syllabus 1.1 Class Schedule 1.2 Content 1.3 Aims 1.4 Conduct 1.5 Assessment 1.6 Software 1.7 Outline", " MBL549 Machine Learning in Architecture Özgün Balaban Chapter 1 Syllabus 1.1 Class Schedule Spring 2021 Thursday 13:30-1630 1.2 Content The course is an introduction to Machine Learning methods with examples from architectural design and creative coding. The course follows a hands on approach with many examples that will be developed during the course. The course includes topics from machine learning such as linear regression, unsupervised learning, supervised learning, reinforcement learning and finally neural networks. 1.3 Aims To have students acquire practical knowledge on the tools of machine learning and different methodologies. To have students knowledge of applying these techniques to creative design process. 1.4 Conduct The first half of the term includes introduction to the various machine learning topics. In this phase there will be practical coding sessions and some assignments which will be graded. In the second half of the term we will focus on a group project which will be developed using neural networks. The grading for the course is as follows: attendance and in-class participation in coding challenges 20%; hands-on practices, 20%; final project presentation by group (or solo if prefered) 60%. 1.5 Assessment coding challenges 20%; hands-on practices, 20%; final project presentation by group (or solo if prefered) 60%. 1.5.1 Assignments Assignment 1 1.5.2 Final Project TBA 1.6 Software We will use Python in an Anaconda environment. 1.7 Outline Week 1 Introduction Week 2 Version Control - Python Refresher Week 3 Data scraping &amp; Linear Regression week 4 Unsupervised Learning Week 5 Supervised Learning Week 6 Reinforcement Learning Week 7 Introduction to Neural Networks Week 8 Break Week 9 Neural Network examples - Project Discussion Week 10 Neural Network examples Week 11 Neural Network examples Week 12 Projects Week 13 Projects Week 14 Projects Week 15 Projects "],["week-1.html", "Chapter 2 Week 1", " Chapter 2 Week 1 In the first week we had a talk about the course syllabus and discussed about Machine Learning examples. "],["week-2.html", "Chapter 3 Week 2 3.1 Version Control", " Chapter 3 Week 2 In the second week we discussed version control using Github and had a refresher about Python programming. 3.1 Version Control 3.1.1 What is Version Control [https://en.wikipedia.org/wiki/Version_control] Most famous VCS are; Git Subversion Mercurial In this course, we will use Git. 3.1.1.1 Terminology Version Control System / Source Code Manager Git is a SCM or VCS that stores the status of the files for us. Commit When a commit is made Git stores the contents of all the files that are in the staging area. It is like saving in a game. Repository / repo A repository is a directory that contains your project. Working Directory Working Directory is the directory that is configured in the init for the repo. Checkout A checkout is when content in the repository has been copied to the Working Directory. Staging Area / Staging Index / Index A file in the Git directory that stores information about what will go into your next commit. You can think of the staging area as a prep table where Git will take the next commit. Files on the Staging Index are poised to be added to the repository. SHA A SHA is basically an ID number for each commit. Heres what a commits SHA might look like: e2adf8ae3e2e4ed40add75cc44cf9d0a869afeb6. It is a 40-character string composed of characters (09 and af) and calculated based on the contents of a file or directory structure in Git. SHA is shorthand for Secure Hash Algorithm. If youre interested in learning about hashes, check out our Intro to Computer Science course. Branch A branch is when a new line of development is created that diverges from the main line of development. This alternative line of development can continue without altering the main line. 3.1.2 Create a Git Repo 3.1.3 Add Commits to a Repo 3.1.4 Branching and Merging 3.1.5 Repos History 3.1.6 Undoing Changes Modifying the Last Commit git commit --amend Reverting a Commit git revert &lt;SHA of a commit&gt; Deleting a Commit can be dangerous git reset Optional readings are below: Reading: Excuse me, do you have a moment to talk about version control? "],["week-3-python-refresher.html", "Chapter 4 Week 3 Python Refresher", " Chapter 4 Week 3 Python Refresher "],["week-4-python-refresher-cont.html", "Chapter 5 Week 4 Python Refresher - cont 5.1 Numpy Refresher 5.2 Pandas Refresher 5.3 Linear Regression", " Chapter 5 Week 4 Python Refresher - cont 5.1 Numpy Refresher 5.2 Pandas Refresher 5.3 Linear Regression "],["week-5-unsupervised-learning.html", "Chapter 6 Week 5 Unsupervised Learning 6.1 K Means 6.2 Principal Component Analysis (PCA)", " Chapter 6 Week 5 Unsupervised Learning 6.1 K Means Scikit K means page: https://scikit-learn.org/stable/modules/generated/sklearn.cluster.k_means.html?highlight=k%20means#sklearn.cluster.k_means 6.2 Principal Component Analysis (PCA) Sci-kit PCA page: https://scikit-learn.org/stable/modules/generated/sklearn.decomposition.PCA.html?highlight=pca#sklearn.decomposition.PCA "],["week-6-creative-machine-learning.html", "Chapter 7 Week 6 Creative Machine Learning 7.1 Project Brief", " Chapter 7 Week 6 Creative Machine Learning Examples discussed in the lecture: https://monoskop.org/Neural_aesthetics Going Deeper into Neural Networks https://ai.googleblog.com/2015/06/inceptionism-going-deeper-into-neural.html A Neural Algorithm of Artistic Style Unsupervised Representation Learning with Deep Convolutional Generative Adversarial Networks. https://ami.withgoogle.com/ https://medium.com/artists-and-machine-intelligence https://grayarea.org/event/deepdream-the-art-of-neural-networks/ https://experiments.withgoogle.com/collection/ai http://nips4creativity.com/ http://www.aiartonline.com/ https://vimeo.com/240667014 https://vimeo.com/338726032 http://www.aiartonline.com/art/robbie-barrat/ Suggestive Drawing Among Human and Artificial Intelligences https://towardsdatascience.com/gan-loci-e2bbd1b4926f Approach to the Extraction of Design Features of Interior Design Elements Using Image Recognition Technique DANIEL: A Deep Architecture for Automatic Analysis and Retrieval of Building Floor Plans Architectural Drawings Recognition and Generation through Machine Learning Drawing with Bots: Human-computer Collaborative Drawing Experiments, in: Learning, Prototyping and Adapting https://towardsdatascience.com/ai-architecture-f9d78c6958e0 Enabling Alternative Architectures: Collaborative Frameworks for Participatory Design Deep Form Finding - Using Variational Autoencoders for deep form finding of structural typologies http://fresheyes.ksteinfe.com/explorations.html Machinic Design Inference: from Pokémon to Architecture - A Probabilistic Machine Learning Model for Generative Design using Game Levels Abstractions Inference Design Machine: Infinite &amp; Recombinant Series Voxel Sampling for Architectural Design Synthesis 7.1 Project Brief the formal discovery of an architectural concept through the curation of a dataset and the training of a machine learning model for generating design prototypes What is the architectural concept to be learnt formally? What are the data samples that might implicitly represent such a concept? How could the samples be collected/created in large quantities? How might each sample be numerically encoded for our machine learning model? What would be generated from such a model? How would a newly generated digital sample be physically formed? How might the work benefit design thinking and production? Examples: A trained machine learning model that could generate new samples of _______? of MiesBarcelona Pavilions / Gropius Dessau Bauhaus / Combinations (as a specific building) of Housing / Mosques (as a typology) of Staircases / Columns / Lifts (as an architectural element) of Zahas Style / Safranbolu Vernacular (as a style) of openness / warmth (as a spatial perception) "]]
